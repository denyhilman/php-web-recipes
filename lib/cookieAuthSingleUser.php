<?php // 0.0.2

require_once('getBrowserUrl.php');

/*
cookieAuthSingleUser is a cookie-based authenticator that should be used in conjunction with cookieAuthBcrypt.php or cookieAuthSha1.php.

On all admin pages, put this line at the top:
	cookieAuthSingleUser_validateLoginElseRedirect($cookieName, $existingHash, $loginPageUrl, $redirectParamName);
	// this will validate the login.  If not successful, it will redirect to the login page, appending the current page URL as a query string parameter

On admin ajax page:
	if (!cookieAuthSingleUser_isLoggedIn($cookieName, $existingHash)) {
		exit('ERROR - NEED TO AUTHENTICATE'); // or insert your error message
	}

On login page, add these lines:
	if (cookieAuthSha1_credentialsMatchHash('APPID', $_POST['username'], $_POST['password'], $existingHash)) {
		cookieAuthSingleUser_setLoggedIn($cookieName, $existingHash);

		// if you want to redirect back to the admin page that directed the user to the login page:
		cookieAuthSingleUser_redirectUrlBasedOnQueryString($defaultUrlIfNoRedirectParamSpecified);
	}

On logout page, add this line:
	cookieAuthSingleUser_logout($cookieName);

A hash can be generated by running (SHA1):
	$existingHash = cookieAuthSha1_generateHash($salt, $username, $password);
*/

function cookieAuthSingleUser_isLoggedIn($cookieName, $existingHash) {
	return isset($_COOKIE[$cookieName]) && $_COOKIE[$cookieName] === $existingHash;
}

function cookieAuthSingleUser_redirectUrlBasedOnQueryString($defaultUrlIfNoRedirectParamSpecified, $redirectParamName = 'r') {
	$url = isset($_GET[$redirectParamName]) ? $_GET[$redirectParamName] : $defaultUrlIfNoRedirectParamSpecified;
	header("location: $url");
}

function cookieAuthSingleUser_setLoggedIn($cookieName, $existingHash, $persistDays) {
	if (is_numeric($persistDays) && $persistDays !== 0) {
		$expire =  time() + (60 * 60 * 24 * $persistDays);
	} else {
		$expire = 0;
	}
	setcookie($cookieName, $existingHash, $expire);
}

function cookieAuthSingleUser_logout($cookieName) {
	setcookie($cookieName, '', time());
}

function cookieAuthSingleUser_validateLoginElseRedirect($cookieName, $existingHash, $loginPageUrl, $redirectParamName = 'r') {
	if (!cookieAuthSingleUser_isLoggedIn($cookieName, $existingHash)) {
		$url = urlencode(getBrowserUrl());
		header("location: $loginPageUrl?$redirectParamName=$url");
	}
}
?>